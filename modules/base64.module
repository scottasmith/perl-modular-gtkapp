# Copyright (C) <2011>  <Scott Smith> <smitherz82@gmail.com>
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use MIME::Base64;

our %module_base64_header = (
	module_name => 'base64',
	menu_title => 'Base64',
	frame => &base64_frame,
	rank => 2
);

sub base64
{
	return %module_base64_header;
}

sub base64_frame
{
	my $main_vbox = Gtk2::VBox->new (FALSE, 5);

	$main_vbox->add(&base64_encode_frame);
	$main_vbox->add(&base64_decode_frame);
	$main_vbox->set_border_width(4);

	return $main_vbox;
}

sub base64_encode_frame {
	my ($frm, $vbox, $hbox1, $hbox2, $txt_label, $txt_box, $res_label, $res_box, $btn);

	$frm = Gtk2::Frame->new ('Encode');
	$vbox = Gtk2::VBox->new (FALSE, 0);

	$hbox1 = Gtk2::HBox->new (FALSE, 0);
	$vbox->pack_start ($hbox1, TRUE, TRUE, 0);

	$txt_label = Gtk2::Label->new ("Enter Text:");
	$hbox1->pack_start ($txt_label, FALSE, 3, 10);
	$txt_box = Gtk2::Entry->new;
	$hbox1->pack_end ($txt_box, 10, 1, 10);

	$hbox2 = Gtk2::HBox->new (FALSE, 0);
	$vbox->pack_start ($hbox2, TRUE, TRUE, 0);

	$res_label = Gtk2::Label->new ("Result:");
	$hbox2->pack_start ($res_label, FALSE, FALSE, 10);
	$res_box = Gtk2::Entry->new;
	$hbox2->pack_end ($res_box, 10, 1, 10);

    my $btn = Gtk2::Button->new ("Encode");
    $btn->signal_connect (clicked => sub {
		my $b = encode_base64($txt_box->get_text);
		$res_box->set_text(substr($b, 0, -1));
	});
	$btn->set_border_width(10);
	$vbox->pack_end ($btn, TRUE, TRUE, 0);

	$frm->add($vbox);
	return $frm;
}

sub base64_decode_frame {
	my ($frm, $vbox, $hbox1, $hbox2, $txt_label, $txt_box, $res_label, $res_box, $btn);

	$frm = Gtk2::Frame->new ('Decode');
	$vbox = Gtk2::VBox->new (FALSE, 0);

	$hbox1 = Gtk2::HBox->new (FALSE, 0);
	$vbox->pack_start ($hbox1, TRUE, TRUE, 0);

	$txt_label = Gtk2::Label->new ("Enter Base64:");
	$hbox1->pack_start ($txt_label, FALSE, 3, 10);
	$txt_box = Gtk2::Entry->new;
	$hbox1->pack_end ($txt_box, 10, 1, 10);

	$hbox2 = Gtk2::HBox->new (FALSE, 0);
	$vbox->pack_start ($hbox2, TRUE, TRUE, 0);

	$res_label = Gtk2::Label->new ("Result:");
	$hbox2->pack_start ($res_label, FALSE, FALSE, 10);
	$res_box = Gtk2::Entry->new;
	$hbox2->pack_end ($res_box, 10, 1, 10);

    my $btn = Gtk2::Button->new ("Decode");
    $btn->signal_connect (clicked => sub {
		$res_box->set_text(decode_base64($txt_box->get_text));
	});
	$btn->set_border_width(10);
	$vbox->pack_end ($btn, TRUE, TRUE, 0);

	$frm->add($vbox);
	return $frm;
}

1;
